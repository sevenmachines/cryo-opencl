.TH "cl::KernelFunctor" 3 "Mon Mar 14 2011" "cryo-opencl" \" -*- nroff -*-
.ad l
.nh
.SH NAME
cl::KernelFunctor \- 
.PP
\fBKernel\fP functor interface.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <cl.hpp>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBKernelFunctor\fP ()"
.br
.ti -1c
.RI "\fBKernelFunctor\fP (const \fBKernel\fP &kernel, const \fBCommandQueue\fP &queue, const \fBNDRange\fP &offset, const \fBNDRange\fP &global, const \fBNDRange\fP &local)"
.br
.ti -1c
.RI "\fBKernelFunctor\fP & \fBoperator=\fP (const \fBKernelFunctor\fP &rhs)"
.br
.ti -1c
.RI "\fBKernelFunctor\fP (const \fBKernelFunctor\fP &rhs)"
.br
.ti -1c
.RI "cl_int \fBgetError\fP ()"
.br
.ti -1c
.RI "\fBEvent\fP \fBoperator()\fP (const VECTOR_CLASS< \fBEvent\fP > *events=NULL)"
.br
.ti -1c
.RI "template<typename A1 > \fBEvent\fP \fBoperator()\fP (const A1 &a1, const VECTOR_CLASS< \fBEvent\fP > *events=NULL)"
.br
.ti -1c
.RI "template<class A1 , class A2 > \fBEvent\fP \fBoperator()\fP (const A1 &a1, const A2 &a2, const VECTOR_CLASS< \fBEvent\fP > *events=NULL)"
.br
.ti -1c
.RI "template<class A1 , class A2 , class A3 > \fBEvent\fP \fBoperator()\fP (const A1 &a1, const A2 &a2, const A3 &a3, const VECTOR_CLASS< \fBEvent\fP > *events=NULL)"
.br
.ti -1c
.RI "template<class A1 , class A2 , class A3 , class A4 > \fBEvent\fP \fBoperator()\fP (const A1 &a1, const A2 &a2, const A3 &a3, const A4 &a4, const VECTOR_CLASS< \fBEvent\fP > *events=NULL)"
.br
.ti -1c
.RI "template<class A1 , class A2 , class A3 , class A4 , class A5 > \fBEvent\fP \fBoperator()\fP (const A1 &a1, const A2 &a2, const A3 &a3, const A4 &a4, const A5 &a5, const VECTOR_CLASS< \fBEvent\fP > *events=NULL)"
.br
.ti -1c
.RI "template<class A1 , class A2 , class A3 , class A4 , class A5 , class A6 > \fBEvent\fP \fBoperator()\fP (const A1 &a1, const A2 &a2, const A3 &a3, const A4 &a4, const A5 &a5, const A6 &a6, const VECTOR_CLASS< \fBEvent\fP > *events=NULL)"
.br
.ti -1c
.RI "template<class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 > \fBEvent\fP \fBoperator()\fP (const A1 &a1, const A2 &a2, const A3 &a3, const A4 &a4, const A5 &a5, const A6 &a6, const A7 &a7, const VECTOR_CLASS< \fBEvent\fP > *events=NULL)"
.br
.ti -1c
.RI "template<class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 > \fBEvent\fP \fBoperator()\fP (const A1 &a1, const A2 &a2, const A3 &a3, const A4 &a4, const A5 &a5, const A6 &a6, const A7 &a7, const A8 &a8, const VECTOR_CLASS< \fBEvent\fP > *events=NULL)"
.br
.ti -1c
.RI "template<class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 > \fBEvent\fP \fBoperator()\fP (const A1 &a1, const A2 &a2, const A3 &a3, const A4 &a4, const A5 &a5, const A6 &a6, const A7 &a7, const A8 &a8, const A9 &a9, const VECTOR_CLASS< \fBEvent\fP > *events=NULL)"
.br
.ti -1c
.RI "template<class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 > \fBEvent\fP \fBoperator()\fP (const A1 &a1, const A2 &a2, const A3 &a3, const A4 &a4, const A5 &a5, const A6 &a6, const A7 &a7, const A8 &a8, const A9 &a9, const A10 &a10, const VECTOR_CLASS< \fBEvent\fP > *events=NULL)"
.br
.ti -1c
.RI "template<class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 > \fBEvent\fP \fBoperator()\fP (const A1 &a1, const A2 &a2, const A3 &a3, const A4 &a4, const A5 &a5, const A6 &a6, const A7 &a7, const A8 &a8, const A9 &a9, const A10 &a10, const A11 &a11, const VECTOR_CLASS< \fBEvent\fP > *events=NULL)"
.br
.ti -1c
.RI "template<class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 > \fBEvent\fP \fBoperator()\fP (const A1 &a1, const A2 &a2, const A3 &a3, const A4 &a4, const A5 &a5, const A6 &a6, const A7 &a7, const A8 &a8, const A9 &a9, const A10 &a10, const A11 &a11, const A12 &a12, const VECTOR_CLASS< \fBEvent\fP > *events=NULL)"
.br
.ti -1c
.RI "template<class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 > \fBEvent\fP \fBoperator()\fP (const A1 &a1, const A2 &a2, const A3 &a3, const A4 &a4, const A5 &a5, const A6 &a6, const A7 &a7, const A8 &a8, const A9 &a9, const A10 &a10, const A11 &a11, const A12 &a12, const A13 &a13, const VECTOR_CLASS< \fBEvent\fP > *events=NULL)"
.br
.ti -1c
.RI "template<class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 > \fBEvent\fP \fBoperator()\fP (const A1 &a1, const A2 &a2, const A3 &a3, const A4 &a4, const A5 &a5, const A6 &a6, const A7 &a7, const A8 &a8, const A9 &a9, const A10 &a10, const A11 &a11, const A12 &a12, const A13 &a13, const A14 &a14, const VECTOR_CLASS< \fBEvent\fP > *events=NULL)"
.br
.ti -1c
.RI "template<class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 > \fBEvent\fP \fBoperator()\fP (const A1 &a1, const A2 &a2, const A3 &a3, const A4 &a4, const A5 &a5, const A6 &a6, const A7 &a7, const A8 &a8, const A9 &a9, const A10 &a10, const A11 &a11, const A12 &a12, const A13 &a13, const A14 &a14, const A15 &a15, const VECTOR_CLASS< \fBEvent\fP > *events=NULL)"
.br
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "\fBKernel\fP \fBkernel_\fP"
.br
.ti -1c
.RI "\fBCommandQueue\fP \fBqueue_\fP"
.br
.ti -1c
.RI "\fBNDRange\fP \fBoffset_\fP"
.br
.ti -1c
.RI "\fBNDRange\fP \fBglobal_\fP"
.br
.ti -1c
.RI "\fBNDRange\fP \fBlocal_\fP"
.br
.ti -1c
.RI "cl_int \fBerr_\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
\fBKernel\fP functor interface. 

\fBNote:\fP
.RS 4
Currently only functors of zero to ten arguments are supported. It is straightforward to add more and a more general solution, similar to Boost.Lambda could be followed if required in the future. 
.RE
.PP

.PP
Definition at line 3126 of file cl.hpp.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "cl::KernelFunctor::KernelFunctor ()\fC [inline]\fP"
.PP
Definition at line 3137 of file cl.hpp.
.SS "cl::KernelFunctor::KernelFunctor (const \fBKernel\fP &kernel, const \fBCommandQueue\fP &queue, const \fBNDRange\fP &offset, const \fBNDRange\fP &global, const \fBNDRange\fP &local)\fC [inline]\fP"
.PP
Definition at line 3139 of file cl.hpp.
.SS "cl::KernelFunctor::KernelFunctor (const \fBKernelFunctor\fP &rhs)\fC [inline]\fP"
.PP
Definition at line 3388 of file cl.hpp.
.SH "Member Function Documentation"
.PP 
.SS "cl_int cl::KernelFunctor::getError ()\fC [inline]\fP"
.PP
Definition at line 3157 of file cl.hpp.
.SS "template<class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 , class A15 > \fBEvent\fP cl::KernelFunctor::operator() (const A1 &a1, const A2 &a2, const A3 &a3, const A4 &a4, const A5 &a5, const A6 &a6, const A7 &a7, const A8 &a8, const A9 &a9, const A10 &a10, const A11 &a11, const A12 &a12, const A13 &a13, const A14 &a14, const A15 &a15, const VECTOR_CLASS< \fBEvent\fP > *events = \fCNULL\fP)\fC [inline]\fP"
.PP
Definition at line 3890 of file cl.hpp.
.PP
References cl::CommandQueue::enqueueNDRangeKernel(), err_, global_, kernel_, local_, offset_, queue_, and cl::Kernel::setArg().
.SS "template<class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 , class A14 > \fBEvent\fP cl::KernelFunctor::operator() (const A1 &a1, const A2 &a2, const A3 &a3, const A4 &a4, const A5 &a5, const A6 &a6, const A7 &a7, const A8 &a8, const A9 &a9, const A10 &a10, const A11 &a11, const A12 &a12, const A13 &a13, const A14 &a14, const VECTOR_CLASS< \fBEvent\fP > *events = \fCNULL\fP)\fC [inline]\fP"
.PP
Definition at line 3842 of file cl.hpp.
.PP
References cl::CommandQueue::enqueueNDRangeKernel(), err_, global_, kernel_, local_, offset_, queue_, and cl::Kernel::setArg().
.SS "template<typename A1 > \fBEvent\fP cl::KernelFunctor::operator() (const A1 &a1, const VECTOR_CLASS< \fBEvent\fP > *events = \fCNULL\fP)\fC [inline]\fP"
.PP
Definition at line 3413 of file cl.hpp.
.PP
References cl::CommandQueue::enqueueNDRangeKernel(), err_, global_, kernel_, local_, offset_, queue_, and cl::Kernel::setArg().
.SS "template<class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 > \fBEvent\fP cl::KernelFunctor::operator() (const A1 &a1, const A2 &a2, const A3 &a3, const A4 &a4, const A5 &a5, const A6 &a6, const A7 &a7, const A8 &a8, const A9 &a9, const A10 &a10, const A11 &a11, const A12 &a12, const VECTOR_CLASS< \fBEvent\fP > *events = \fCNULL\fP)\fC [inline]\fP"
.PP
Definition at line 3752 of file cl.hpp.
.PP
References cl::CommandQueue::enqueueNDRangeKernel(), err_, global_, kernel_, local_, offset_, queue_, and cl::Kernel::setArg().
.SS "template<class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 > \fBEvent\fP cl::KernelFunctor::operator() (const A1 &a1, const A2 &a2, const A3 &a3, const A4 &a4, const A5 &a5, const A6 &a6, const A7 &a7, const A8 &a8, const A9 &a9, const A10 &a10, const A11 &a11, const VECTOR_CLASS< \fBEvent\fP > *events = \fCNULL\fP)\fC [inline]\fP"
.PP
Definition at line 3710 of file cl.hpp.
.PP
References cl::CommandQueue::enqueueNDRangeKernel(), err_, global_, kernel_, local_, offset_, queue_, and cl::Kernel::setArg().
.SS "template<typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 , typename A10 > \fBEvent\fP cl::KernelFunctor::operator() (const A1 &a1, const A2 &a2, const A3 &a3, const A4 &a4, const A5 &a5, const A6 &a6, const A7 &a7, const A8 &a8, const A9 &a9, const A10 &a10, const VECTOR_CLASS< \fBEvent\fP > *events = \fCNULL\fP)\fC [inline]\fP"
.PP
Definition at line 3670 of file cl.hpp.
.PP
References cl::CommandQueue::enqueueNDRangeKernel(), err_, global_, kernel_, local_, offset_, queue_, and cl::Kernel::setArg().
.SS "template<typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9 > \fBEvent\fP cl::KernelFunctor::operator() (const A1 &a1, const A2 &a2, const A3 &a3, const A4 &a4, const A5 &a5, const A6 &a6, const A7 &a7, const A8 &a8, const A9 &a9, const VECTOR_CLASS< \fBEvent\fP > *events = \fCNULL\fP)\fC [inline]\fP"
.PP
Definition at line 3633 of file cl.hpp.
.PP
References cl::CommandQueue::enqueueNDRangeKernel(), err_, global_, kernel_, local_, offset_, queue_, and cl::Kernel::setArg().
.SS "template<typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 > \fBEvent\fP cl::KernelFunctor::operator() (const A1 &a1, const A2 &a2, const A3 &a3, const A4 &a4, const A5 &a5, const A6 &a6, const A7 &a7, const A8 &a8, const VECTOR_CLASS< \fBEvent\fP > *events = \fCNULL\fP)\fC [inline]\fP"
.PP
Definition at line 3598 of file cl.hpp.
.PP
References cl::CommandQueue::enqueueNDRangeKernel(), err_, global_, kernel_, local_, offset_, queue_, and cl::Kernel::setArg().
.SS "template<typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 > \fBEvent\fP cl::KernelFunctor::operator() (const A1 &a1, const A2 &a2, const A3 &a3, const A4 &a4, const A5 &a5, const A6 &a6, const A7 &a7, const VECTOR_CLASS< \fBEvent\fP > *events = \fCNULL\fP)\fC [inline]\fP"
.PP
Definition at line 3565 of file cl.hpp.
.PP
References cl::CommandQueue::enqueueNDRangeKernel(), err_, global_, kernel_, local_, offset_, queue_, and cl::Kernel::setArg().
.SS "template<typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 > \fBEvent\fP cl::KernelFunctor::operator() (const A1 &a1, const A2 &a2, const A3 &a3, const A4 &a4, const A5 &a5, const A6 &a6, const VECTOR_CLASS< \fBEvent\fP > *events = \fCNULL\fP)\fC [inline]\fP"
.PP
Definition at line 3534 of file cl.hpp.
.PP
References cl::CommandQueue::enqueueNDRangeKernel(), err_, global_, kernel_, local_, offset_, queue_, and cl::Kernel::setArg().
.SS "template<typename A1 , typename A2 , typename A3 , typename A4 , typename A5 > \fBEvent\fP cl::KernelFunctor::operator() (const A1 &a1, const A2 &a2, const A3 &a3, const A4 &a4, const A5 &a5, const VECTOR_CLASS< \fBEvent\fP > *events = \fCNULL\fP)\fC [inline]\fP"
.PP
Definition at line 3505 of file cl.hpp.
.PP
References cl::CommandQueue::enqueueNDRangeKernel(), err_, global_, kernel_, local_, offset_, queue_, and cl::Kernel::setArg().
.SS "template<typename A1 , typename A2 , typename A3 , typename A4 > \fBEvent\fP cl::KernelFunctor::operator() (const A1 &a1, const A2 &a2, const A3 &a3, const A4 &a4, const VECTOR_CLASS< \fBEvent\fP > *events = \fCNULL\fP)\fC [inline]\fP"
.PP
Definition at line 3479 of file cl.hpp.
.PP
References cl::CommandQueue::enqueueNDRangeKernel(), err_, global_, kernel_, local_, offset_, queue_, and cl::Kernel::setArg().
.SS "template<typename A1 , typename A2 , typename A3 > \fBEvent\fP cl::KernelFunctor::operator() (const A1 &a1, const A2 &a2, const A3 &a3, const VECTOR_CLASS< \fBEvent\fP > *events = \fCNULL\fP)\fC [inline]\fP"
.PP
Definition at line 3455 of file cl.hpp.
.PP
References cl::CommandQueue::enqueueNDRangeKernel(), err_, global_, kernel_, local_, offset_, queue_, and cl::Kernel::setArg().
.SS "template<typename A1 , typename A2 > \fBEvent\fP cl::KernelFunctor::operator() (const A1 &a1, const A2 &a2, const VECTOR_CLASS< \fBEvent\fP > *events = \fCNULL\fP)\fC [inline]\fP"
.PP
Definition at line 3433 of file cl.hpp.
.PP
References cl::CommandQueue::enqueueNDRangeKernel(), err_, global_, kernel_, local_, offset_, queue_, and cl::Kernel::setArg().
.SS "template<class A1 , class A2 , class A3 , class A4 , class A5 , class A6 , class A7 , class A8 , class A9 , class A10 , class A11 , class A12 , class A13 > \fBEvent\fP cl::KernelFunctor::operator() (const A1 &a1, const A2 &a2, const A3 &a3, const A4 &a4, const A5 &a5, const A6 &a6, const A7 &a7, const A8 &a8, const A9 &a9, const A10 &a10, const A11 &a11, const A12 &a12, const A13 &a13, const VECTOR_CLASS< \fBEvent\fP > *events = \fCNULL\fP)\fC [inline]\fP"
.PP
Definition at line 3796 of file cl.hpp.
.PP
References cl::CommandQueue::enqueueNDRangeKernel(), err_, global_, kernel_, local_, offset_, queue_, and cl::Kernel::setArg().
.SS "\fBEvent\fP cl::KernelFunctor::operator() (const VECTOR_CLASS< \fBEvent\fP > *events = \fCNULL\fP)\fC [inline]\fP"
.PP
Definition at line 3397 of file cl.hpp.
.PP
References cl::CommandQueue::enqueueNDRangeKernel(), err_, global_, kernel_, local_, offset_, and queue_.
.SS "\fBKernelFunctor\fP & cl::KernelFunctor::operator= (const \fBKernelFunctor\fP &rhs)\fC [inline]\fP"
.PP
Definition at line 3373 of file cl.hpp.
.PP
References global_, kernel_, local_, offset_, and queue_.
.SH "Member Data Documentation"
.PP 
.SS "cl_int \fBcl::KernelFunctor::err_\fP\fC [private]\fP"
.PP
Definition at line 3135 of file cl.hpp.
.PP
Referenced by operator()().
.SS "\fBNDRange\fP \fBcl::KernelFunctor::global_\fP\fC [private]\fP"
.PP
Definition at line 3132 of file cl.hpp.
.PP
Referenced by operator()(), and operator=().
.SS "\fBKernel\fP \fBcl::KernelFunctor::kernel_\fP\fC [private]\fP"
.PP
Definition at line 3129 of file cl.hpp.
.PP
Referenced by operator()(), and operator=().
.SS "\fBNDRange\fP \fBcl::KernelFunctor::local_\fP\fC [private]\fP"
.PP
Definition at line 3133 of file cl.hpp.
.PP
Referenced by operator()(), and operator=().
.SS "\fBNDRange\fP \fBcl::KernelFunctor::offset_\fP\fC [private]\fP"
.PP
Definition at line 3131 of file cl.hpp.
.PP
Referenced by operator()(), and operator=().
.SS "\fBCommandQueue\fP \fBcl::KernelFunctor::queue_\fP\fC [private]\fP"
.PP
Definition at line 3130 of file cl.hpp.
.PP
Referenced by operator()(), and operator=().

.SH "Author"
.PP 
Generated automatically by Doxygen for cryo-opencl from the source code.
